name: CI

on: 
  push:
    branches:
      - main

jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
        # Descargar el código
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: 16

      # Instalar dependencias y correr linter
      - run: npm ci
      - run: npm run lint


  cypress:
    runs-on: ubuntu-latest
    needs: lint

    steps:
        # Descargar el código
        - uses: actions/checkout@v2
        - uses: actions/setup-node@v2
          with:
            node-version: 16

        # Instalar dependencias y correr Cypress
        - run: npm ci
        - run: npm run cypress || true
        - run: echo "Success" > result.txt
        
        # Crear artefacto
        - uses: actions/upload-artifact@v4
          with:
            name: Cypress Results
            path: result.txt

  deploy:
    runs-on: ubuntu-latest
    needs: cypress  # Este job se ejecutará después del job de Cypress

    steps:
      # Checkout del código
      - uses: actions/checkout@v2

      # Desplegar en Vercel
      - name: Deploy to Vercel
        uses: amondnet/vercel-action@v20
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}  # Token de Vercel desde los Secrets
          vercel-project-name: "acciones-github"
          vercel-args: '--yes'  # Confirmar automáticamente el deploy

  
  Notification_job:
    runs-on: ubuntu-latest
    needs: [lint, cypress, deploy]  # Este job depende de que los otros se ejecuten
    if: always()  # Aseguramos que se ejecute siempre, sin importar el estado de los otros jobs

    steps:
      # Obtener el código
      - uses: actions/checkout@v2

      # Definir el estado de los jobs previos
      - name: Set job results as environment variables
        run: |
          echo "LINTER_RESULT=${{ needs.lint.result }}" >> $GITHUB_ENV
          echo "CYPRESS_RESULT=${{ needs.cypress.result }}" >> $GITHUB_ENV
          echo "DEPLOY_RESULT=${{ needs.deploy.result }}" >> $GITHUB_ENV

      - name: Print job results
        run: |
          echo "Linter result: $LINTER_RESULT"
          echo "Cypress result: $CYPRESS_RESULT"
          echo "Deploy result: $DEPLOY_RESULT"

      # Enviar el correo con el estado de los jobs
      

      # - name: Send notification email
      #   uses: mohitk05/send-mail-action@v1
      #   with:
      #     to: ${{ secrets.PERSONAL_EMAIL }}  # Correo de destinatario, almacenado como un secret
      #     subject: "Resultat del workflow executat"
      #     body: |
      #       S'ha realitzat un push en la branca main que ha provocat l'execució del workflow **${{ github.workflow }}** amb els següents resultats:
            
      #       - **linter_job**: ${{ env.LINTER_RESULT }}
      #       - **cypress_job**: ${{ env.CYPRESS_RESULT }}
      #       - **deploy_job**: ${{ env.DEPLOY_RESULT }}
      #   env:
      #     SENDGRID_API_KEY: ${{ secrets.SENDGRID_API_KEY }}  # API Key de SendGrid (u otro servicio)


  # add_badge:
  #   runs-on: ubuntu-latest
  #   needs: cypress

  #   steps:
  #     # Descargar el código
  #     - uses: actions/checkout@v2

  #     # Descargar artefactos
  #     - uses: actions/download-artifact@v4
  #       with:
  #         name: Cypress Results
  #         path: result.zip  # Se descargará como un archivo ZIP

  #     # Descomprimir el archivo ZIP
  #     - run: |
  #         unzip result.zip -d result  # Extraer el contenido del ZIP a la carpeta result

  #     # Verificar el contenido del directorio descomprimido
  #     - run: ls -l result  # Esto listará los archivos dentro de la carpeta 'result'

  #     # Leer el archivo result.txt y generar el output
  #     - id: generate_output
  #       run: |
  #         OUTCOME=$(cat result/result.txt)  # Asegúrate de que el archivo se llama result.txt
  #         echo "::set-output name=cypress_outcome::$OUTCOME"

  #     # Modificar el README.md con un badge
  #     - uses: ./actions
  #       with:
  #         outcome: ${{ steps.generate_output.outputs.cypress_outcome }}

  #     # Push changes
  #     - run: |
  #         git config --global user.name "github-actions[bot]"
  #         git config --global user.email "github-actions[bot]@users.noreply.github.com"
  #         git add README.md
  #         git commit -m "Update README with Cypress test results badge"
  #         git push
